{
    "body": "On Fri, 9 Apr 2010 17:57:04 -0400 (EDT), John Hasler wrote: \n> Stephen Powell writes: \n>> Yes, Hercules is an IBM mainframe emulator. But the problem is \n>> licensing. There are some *very old* releases of IBM operating \n>> systems that have passed into the public domain that you can run on \n>> the Hercules emulator. \n>> These are circa 1975 or so, which is about 35 years ago. An example \n>> is VM/SP Release 6. \n \nOops! I meant to say VM/370 Release 6, not VM/SP Release 6. VM/SP \nRelease 6 is still proprietary. \n \n----- \n \nThese are some of the issues that someone writing portable code \nfor ASCII vs. EBCDIC implementations needs to worry about. \n \n(1) Collating sequence. In ASCII, the collating sequence is numbers \n(0-9), followed by uppercase letters (A-Z), followed by lowercase \nletters (a-z). Special characters are mixed throughout. In EBCDIC, \nthe collating sequence is lowercase letters (a-z), followed by \nuppercase letters (A-Z), followed by numbers (0-9). So records \nsorted alphabetically sort in a different order. \n \n(2) Assumptions of continuity. In ASCII, the codes a-z and A-Z \nare contiguous, with no codes in between. In EBCDIC, there are \nsix non-contiguous ranges, a-i, j-r, s-z, A-I, J-R, S-Z. Most \nof the codes in between are non-printable characters, but not \nall. For example, ~ sorts above r and below s, } sorts above I \nand below J, and \\ sorts above R and below S. \n \n(3) Hidden assumptions about control codes. A program may, for \nexample, assume that X'0A' is a line feed and hard code it \nsomewhere. In ASCII, that is true. But in EBCDIC, a line feed \nis X'25'. \n \n(4) 7-bit assumptions. In U.S. standard ASCII, all the printable \ncharacters are between the hex values of X'00'-X'7F'. Codes \nabove X'7F' are not standard codes. Historically, these indicate \nthe combination of the \"Meta\" key with a regular code. In \nEBCDIC, the codes are sprinkled throughout the entire range of \nX'00' through X'FF', with the numeric symbol 9 having the highest \ncode of any normal printable character (X'F9'). \n \nThis is not an exhaustive list, but it gives you an idea \nof what to watch for. Although the \nfollowing table has a few mistakes, this link will give you \nan idea of ASCII vs. EBCDIC codes. \n \n http://www.natural-innovations.com/computing/asciiebcdic.html \n \n-- \n .''`. Stephen Powell \n : :' : \n `. `'` \n `- \n \n \n-- \nTo UNSUBSCRIBE, email to debian-user-REQUEST@lists.debian.org \nwith a subject of \"unsubscribe\". Trouble? Contact listmaster@lists.debian.org \nArchive: http://lists.debian.org/8691664.2246941270858506206.JavaMail.root@md01.wow.synacor.com", 
    "to": [
        "debian-user@lists.debian.org"
    ], 
    "is_spam": false, 
    "from": "Stephen Powell <zlinuxman@wowway.com>", 
    "subject": "Re: non-ASCII environment"
}